name: Build

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-rust:
    name: Build Rust Project (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
    
    - name: Build Rust
      run: cargo build --release
      
    - name: List Rust build output
      shell: bash
      run: |
        echo "Checking target/release directory:"
        ls -la
        pwd
        ls -la target/release/
      
    - name: Upload Rust artifacts
      uses: actions/upload-artifact@v3
      with:
        name: osu-beatmap-addtime-migrate-rust-${{ matrix.os }}
        path: |
          target/release/osu-beatmap-addtime-migrate${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  build-dotnet:
    name: Build .NET Project (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Build .NET
      run: dotnet publish osu_beatmap_addtime_migrate.sln --configuration Release --runtime ${{ matrix.os == 'windows-latest' && 'win-x64' || 'linux-x64' }} --self-contained true --output publish
      
    - name: Upload .NET artifacts
      uses: actions/upload-artifact@v3
      with:
        name: osu-beatmap-addtime-migrate-dotnet-${{ matrix.os }}
        path: publish/*

  create-release:
    name: Create Release
    needs: [build-rust, build-dotnet]
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release Packages
      run: |
        echo "Current directory contents:"
        ls -la
        echo "============================="
        
        VERSION=${GITHUB_REF#refs/tags/}
        # Create Windows package
        mkdir -p release-package-windows
        cp osu-beatmap-addtime-migrate-rust-windows-latest/osu-beatmap-addtime-migrate.exe release-package-windows/
        cp -r osu-beatmap-addtime-migrate-dotnet-windows-latest/* release-package-windows/
        zip -r "osu-beatmap-addtime-migrate-${VERSION}-windows-x64.zip" release-package-windows/
        
        # Create Linux package
        mkdir -p release-package-linux
        cp osu-beatmap-addtime-migrate-rust-ubuntu-latest/osu-beatmap-addtime-migrate release-package-linux/
        cp -r osu-beatmap-addtime-migrate-dotnet-ubuntu-latest/* release-package-linux/
        zip -r "osu-beatmap-addtime-migrate-${VERSION}-linux-x64.zip" release-package-linux/
      shell: bash
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        files: |
          osu-beatmap-addtime-migrate-${{ github.ref_name }}-windows-x64.zip
          osu-beatmap-addtime-migrate-${{ github.ref_name }}-linux-x64.zip
